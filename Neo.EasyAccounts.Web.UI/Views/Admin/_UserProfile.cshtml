@model Neo.Auth.ViewModels.UserViewModel

@using (Html.BeginForm("UserUpdate", "Admin"))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.ID)

		<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("Roles", new SelectList(Model.RolesList, "Key", "Value"), "-", htmlAttributes: new { @class = "form-control select2" })
				@Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<button id="btnSave" type="submit" value="Save" class="btn btn-default">
					<span class="glyphicon glyphicon-save"></span> Save
				</button>
				<button id="btnDelete" type="button" value="Delete" class="btn btn-default" onclick="deleteFrom()">
					<span class="glyphicon glyphicon-trash"></span> Delete
				</button>
				<button id="btnReset" type="reset" value="Reset" class="btn btn-default">
					<span class="glyphicon glyphicon-flash"></span> Reset
				</button>
				<a href='@Url.Action("Users")' class="btn btn-default">
					<span class="glyphicon glyphicon-backward"></span> Back to Listing
				</a>
			</div>
		</div>
	</div>
}
@using (Html.BeginForm("DeleteUser", "Admin", FormMethod.Post, htmlAttributes: new { id = "frmDelete", name = "frmDelete" }))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(m => m.ID)
}
