@model Neo.Auth.ViewModels.UserViewModel
@using Neo.EasyAccounts.Web.UI

@{
	ViewBag.Title = Model.ID > 0 ? "Edit User " : "Create User" + Model.FullName;
	ViewBag.Description = "Update Profile, change password, claims, external logins and customize your settings";
}

<!-- Content Header (Page header) -->
<section class="content-header">
	<h1>
		@ViewBag.Title
		<small>@ViewBag.Description</small>
	</h1>
	<ol class="breadcrumb">
		<li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
		<li><a href="#">Admin</a></li>
		<li><a href="#">Users</a></li>
		<li class="active">@(Model.ID > 0 ? "Edit" : "Create") User</li>
	</ol>
</section>

<!-- Main content -->
<section class="content">
	<div class="row">
		<div class="col-xs-12">
			@Html.ShowMessages()
			<!-- general form elements -->
			<div class="box box-primary">
				<div class="box-header with-border">
					<h3 class="box-title">@ViewBag.Title</h3>
					<small class="pull-right">
						@ViewBag.MetaInfo
					</small>
				</div><!-- /.box-header -->
				@using (Html.BeginForm())
				{
					<div class="box-body">
						@Html.AntiForgeryToken()

						<div class="form-horizontal">
							@Html.ValidationSummary(true, "", new { @class = "text-danger" })
							@Html.HiddenFor(model => model.ID)

							<div class="form-group">
								@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
								</div>
							</div>
							<div class="form-group">
								@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.DropDownList("Roles", new SelectList(Model.RolesList, "Key", "Value"), "-", htmlAttributes: new { @class = "form-control select2" })
									@Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
					</div>
					<div class="box-footer">
						<div class="form-group">
							<div class="col-md-12">
								<button type="submit" class="btn btn-flat btn-primary"><i class="fa fa-save"></i> Save</button>
								<button type="submit" class="btn btn-flat btn-warning"><i class="fa fa-flash"></i> Reset</button>
							</div>
						</div>
					</div>

				}
				@using (Html.BeginForm("DeleteUser", "Admin"))
				{
					<div class="col-md-4 pull-right" style="top:-45px;">
						@Html.AntiForgeryToken()
						@Html.HiddenFor(model => model.ID)
						<ul class="list-inline pull-right">
							<li>
								<a href='@Url.Action("SystemUsers")' class="btn btn-flat btn-default pull-right"> <i class="fa fa-backward"></i> Back to Listing</a>
							</li>
							<li>
								<button name="RegEdit" id="btnDelete" type="submit" class="btn btn-warning pull-right" value="Delete" onclick="return confirm('Are you sure you want to delete this?')">
									<i class="fa fa-trash-o"></i> Delete
								</button>
							</li>
						</ul>
					</div>
				}
			</div>
		</div>
	</div>
</section>
@section styles_top_before{

	@Styles.Render("~/Content/Select2")
	<style>
		input[placeholder] { width: 100% !important; }
	</style>
<link href="~/AdminLTE-2.3.0/plugins/datepicker/datepicker3.css" rel="stylesheet" />
}
@section styles{
	@Styles.Render("~/Content/iCheck-minimal-blue")
}
@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
	<script src="~/AdminLTE-2.3.0/plugins/datepicker/bootstrap-datepicker.js"></script>
	@Scripts.Render("~/bundles/Select2")
	@Scripts.Render("~/bundles/iCheck")

	<script type="text/javascript">
		$(document).ready(function () {
			$('input').iCheck({
				checkboxClass: 'icheckbox_minimal-blue',
				radioClass: 'iradio_minimal-blue',
				increaseArea: '20%' // optional
			});
			$(".select2").select2();
			$('.datepicker').datepicker({ autoclose: true, todayHighlight: true, todayBtn: true });
		});
	</script>
}