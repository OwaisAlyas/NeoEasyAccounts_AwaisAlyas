@model Neo.EasyAccounts.Web.UI.Areas.Locations.ViewModels.CountryViewModel

@{
	ViewBag.Title = "Create Country";
}

<!-- Content Header (Page header) -->
<section class="content-header">
	<h1>
		Country
		<small>Add New record</small>
	</h1>
	<ol class="breadcrumb">
		<li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
		<li><a href="#">Locations</a></li>
		<li><a href="#">Countries</a></li>
		<li class="active">Add Country</li>
	</ol>
</section>

<!-- Main content -->
<section class="content">
	<div class="row">
		<div class="col-xs-12">
			<!-- general form elements -->
			<div class="box box-primary">
				<div class="box-header with-border">
					<h3 class="box-title">Create</h3>
				</div><!-- /.box-header -->
				@using (Html.BeginForm())
				{
					<div class="box-body">
						@Html.AntiForgeryToken()
						<div class="form-horizontal">
							@Html.ValidationSummary(true, "", new { @class = "text-danger" })
							<div class="form-group">
								@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									<div class="checkbox">
										@Html.EditorFor(model => model.IsActive)
										@Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="box-footer">
						<div class="form-group">
							<div class="col-md-12">
								<button type="submit" class="btn btn-flat btn-primary"><i class="fa fa-save"></i> Save</button>
								<button type="submit" class="btn btn-flat btn-warning"><i class="fa fa-flash"></i> Reset</button>
								<a href='@Url.Action("Index")' class="btn btn-flat btn-default pull-right"> <i class="fa fa-backward"></i> Back to Listing</a>
							</div>
						</div>
					</div>

				}
			</div>
		</div>
	</div>
</section>

@section styles{
	@Styles.Render("~/Content/iCheck-minimal-blue")
	@Scripts.Render("~/Scripts/DataTables")
}
@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/iCheck")
	@Scripts.Render("~/Scripts/DataTables")

	<script type="text/javascript">
		$(document).ready(function () {
			$('input').iCheck({
				checkboxClass: 'icheckbox_minimal-blue',
				radioClass: 'iradio_minimal-blue',
				increaseArea: '20%' // optional
			});
		});
		$(function () {
			$('#listingTable').DataTable({
				"paging": true,
				"lengthChange": false,
				"searching": true,
				"ordering": true,
				"info": false,
				"autoWidth": false,
				'aoColumnDefs': [
					{ "width": "7%", "targets": -2 },
					{ "width": "1%", "targets": [-1, 0] },
					{ 'bSortable': false, 'aTargets': -1, 'orderable': false /* 1st one, start by the right */ }
				]
			});
		});
	</script>
}