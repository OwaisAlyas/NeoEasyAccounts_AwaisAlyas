@model Neo.EasyAccounts.Web.UI.Areas.Locations.ViewModels.StateViewModel

@{
	ViewBag.Title = Model == null ? "Create State" : "Edit State " + Model.Name;
}

<!-- Content Header (Page header) -->
<section class="content-header">
	<ol class="breadcrumb">
		<li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
		<li><a href="#">Locations</a></li>
		<li><a href="#">States</a></li>
		<li class="active">@(Model == null ? "Create" : "Edit") State</li>
	</ol>
</section>

<!-- Main content -->
<section class="content">
	<div class="row">
		<div class="col-xs-12">
			@Html.ShowMessages()
			<div class="nav-tabs-custom">
				<ul class="nav nav-tabs">
					<li class="active">
						<a href="#RegEditFrom" data-toggle="tab">
							<span class="glyphicon glyphicon-pencil"></span> @ViewBag.Title
						</a>
					</li>
					<li>
						<a href="#CountriesListing" data-toggle="tab">
							<span class="glyphicon glyphicon-list"></span> Cities
						</a>
					</li>
				</ul>
				<div class="tab-content">
					<div class="tab-pane active fade in" id="RegEditFrom">
						<div class="box box-solid">
							<div class="box-header">
								<small class="pull-right">
									@ViewBag.MetaInfo
								</small>
							</div><!-- /.box-header -->
							@using (Html.BeginForm())
							{
								<div class="box-body">
									@Html.AntiForgeryToken()
									@Html.HiddenFor(model => model.CreatedBy)
									@Html.HiddenFor(model => model.DateCreated)

									<div class="form-horizontal">
										@Html.ValidationSummary(true, "", new { @class = "text-danger" })
										@Html.HiddenFor(model => model.ID)
									</div>
									<div class="form-group">
										@Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-10">
											@Html.DropDownListFor(m => m.CountryID, Model.Countries, "-", new { @class = "form-control select2" })
											@Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-10">
											@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
										</div>
									</div>
									<div class="form-group">
										@Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-10">
											@Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
											@Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="form-group">
										@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-10">
											@Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
											@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
										</div>
									</div>

									<div class="form-group">
										@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-10">
											<div class="checkbox">
												@Html.EditorFor(model => model.IsActive)
												@Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
								</div>
								<div class="box-footer">
									<div class="form-group">
										<div class="col-md-12">
											<button type="submit" class="btn btn-flat btn-primary"><i class="fa fa-save"></i> Save</button>
											<button type="submit" class="btn btn-flat btn-warning"><i class="fa fa-flash"></i> Reset</button>
										</div>
									</div>
								</div>

							}
							@using (Html.BeginForm("delete", "states"))
							{
								<div class="col-md-4 pull-right" style="top:-45px;">
									@Html.AntiForgeryToken()
									@Html.HiddenFor(model => model.ID)
									<ul class="list-inline pull-right">
										<li>
											<a href='@Url.Action("Index")' class="btn btn-flat btn-default pull-right"> <i class="fa fa-backward"></i> Back to Listing</a>
										</li>
										<li>
											<button name="RegEdit" id="btnDelete" type="submit" class="btn btn-warning pull-right" value="Delete" onclick="return confirm('Are you sure you want to delete this?')">
												<i class="fa fa-trash-o"></i> Delete
											</button>
										</li>
									</ul>
								</div>
							}
						</div>
					</div>
					<div class="tab-pane fade in" id="CountriesListing">
						@Html.Partial("_CitiesListingPartial", Model.CityListing)
					</div>
				</div>
			</div>
			<!-- general form elements -->
		</div>
	</div>
</section>
@section styles_top_before{

	@Styles.Render("~/Content/Select2")
}
@section styles{
	@Styles.Render("~/Content/DataTables/css")
	@Styles.Render("~/Content/iCheck-minimal-blue")
}
@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/iCheck")
	@Scripts.Render("~/bundles/Select2")
	@Scripts.Render("~/Scripts/DataTables")

	<script type="text/javascript">
		$(document).ready(function () {
			$('input').iCheck({
				checkboxClass: 'icheckbox_minimal-blue',
				radioClass: 'iradio_minimal-blue',
				increaseArea: '20%' // optional
			});
			$(".select2").select2();
		});
		$(function () {
			$('#listingTable').DataTable({
				"paging": true,
				"lengthChange": false,
				"searching": true,
				"ordering": true,
				"info": false,
				"autoWidth": false,
				'aoColumnDefs': [
					{ "width": "7%", "targets": -2 },
					{ "width": "1%", "targets": [-1, 0] },
					{ 'bSortable': false, 'aTargets': -1, 'orderable': false /* 1st one, start by the right */ }
				]
			});
		});
	</script>
}
